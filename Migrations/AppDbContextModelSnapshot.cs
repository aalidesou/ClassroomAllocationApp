// <auto-generated />
using System;
using ClassroomAllocationApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassroomAllocationApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("ClassroomAllocationApp.Models.Allocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ClassroomId", "StartTime")
                        .IsUnique();

                    b.ToTable("Allocations");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 50,
                            RoomNumber = "LR01"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 30,
                            RoomNumber = "LR11"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 20,
                            RoomNumber = "LR20C"
                        });
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseCode = "USITY5002",
                            DepartmentId = 1,
                            SubjectName = "Database Systems",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 2,
                            CourseCode = "UCMGS2003",
                            DepartmentId = 2,
                            SubjectName = "Organisation of Commerce",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseCode = "UAMCJ3001",
                            DepartmentId = 3,
                            SubjectName = "Introduction to Mass Media",
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mass Media"
                        });
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aaliya Desousa"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Diana Tanttra"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jahnvi Kumar"
                        });
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 3,
                            Name = "Dr. Smith"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Name = "Prof. Johnson"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            Name = "Mr. Roy"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("StudentCourses", (string)null);
                });

            modelBuilder.Entity("VenueChangeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NewClassroomId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AllocationId");

                    b.HasIndex("NewClassroomId");

                    b.HasIndex("TeacherId");

                    b.ToTable("VenueChangeRequests");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Allocation", b =>
                {
                    b.HasOne("ClassroomAllocationApp.Models.Classroom", "Classroom")
                        .WithMany("Allocations")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassroomAllocationApp.Models.Course", "Course")
                        .WithMany("Allocations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Course", b =>
                {
                    b.HasOne("ClassroomAllocationApp.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClassroomAllocationApp.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Teacher", b =>
                {
                    b.HasOne("ClassroomAllocationApp.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("ClassroomAllocationApp.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassroomAllocationApp.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VenueChangeRequest", b =>
                {
                    b.HasOne("ClassroomAllocationApp.Models.Allocation", "Allocation")
                        .WithMany()
                        .HasForeignKey("AllocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassroomAllocationApp.Models.Classroom", "NewClassroom")
                        .WithMany()
                        .HasForeignKey("NewClassroomId");

                    b.HasOne("ClassroomAllocationApp.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allocation");

                    b.Navigation("NewClassroom");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Classroom", b =>
                {
                    b.Navigation("Allocations");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Course", b =>
                {
                    b.Navigation("Allocations");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("ClassroomAllocationApp.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
